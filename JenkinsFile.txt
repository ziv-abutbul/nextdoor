pipeline {
    agent none
	
    stages {
		stage('Fetch') {
		    agent {
                    docker {
                        image 'python:3.10.4'
                        args '-u root'
                            }
                    }
			steps {
				checkout scm
			}
		}
        stage('Build') {
		    agent {
                    docker {
                        image 'python:3.10.4'
                        args '-u root'
                            }
                    }
            steps {
				withEnv(["HOME=${env.WORKSPACE}"]) {
					
						sh 'python -m pip install --upgrade pip --user'
						sh 'python -m pip install -r requirements.txt'
					
					dir("NextDoor"){
						sh 'python manage.py makemigrations'
						sh 'python manage.py migrate'	
					}
				}
            }
        }
		stage('Unit & Integration Tests [Metric 1]') {
		    agent {
                    docker {
                        image 'python:3.10.4'
                        args '-u root'
                            }
                    }
            steps {
				withEnv(["HOME=${env.WORKSPACE}"]) {
					dir("NextDoor"){
						sh "python -m coverage run manage.py test --keepdb"
						sh "python -m coverage report"
					}
				}
			}
		}
		stage('Pylint - Code Analysis [Metric 2]') {
		    agent {
                    docker {
                        image 'python:3.10.4'
                        args '-u root'
                            }
                    }
            steps {
				withEnv(["HOME=${env.WORKSPACE}"]) {
			   		dir("NextDoor"){
			    		sh 'python -m pylint NextDoor Account Home --exit-zero'
				   	}
				}
			}
		}
		stage('Deploy to Heroku'){
			
		    agent {
                    docker {
                        image 'cimg/base:stable'
                        args '-u root'
                            }
                    }
            steps {
                sh '''curl https://cli-assets.heroku.com/install.sh | sh;'''
                withEnv(["HOME=${env.WORKSPACE}"]){
					
                    sh'''
                         docker --version
				docker container prune
                         heroku container:login
                         heroku container:push web --app nextdoor-team4
                         heroku container:release web --app nextdoor-team4	
                     '''
					

                 }
            }
	    }
    }
}

